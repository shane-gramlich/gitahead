name: GitAhead (CI)
on: [push]
jobs:
  build:
    runs-on: ${{ matrix.env.os }}
    strategy:
      fail-fast: false
      matrix:
        env:
          - name: mac
            os: macos-latest
            ninja_platform: mac
            qt_platform: mac
            arch: darwin64-x86_64-cc
          - name: linux
            os: ubuntu-latest
            ninja_platform: linux
            qt_platform: linux
            arch: linux-x86_64
          - name: windows
            os: windows-latest
            ninja_platform: win
            qt_platform: windows
            arch: VC-WIN64A
            cmake_flags: "-DUSE_SYSTEM_OPENSSL=1"
            cmake_env:
              CC: cl
              CXX: cl
    steps:
    - uses: actions/checkout@v1
    - name: Initialize Submodules
      uses: snickerbockers/submodules-init@v4
    - name: Install Perl
      if: matrix.env.name == 'windows'
      uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: '5.30'
    - name: Build OpensSSL (Win)
      if: matrix.env.name == 'windows'
      run: |
        cd dep/openssl/openssl
        perl Configure VC-WIN64A
        nmake
    - name: Build OpenSSL (Unix)
      if: matrix.env.name != 'windows'
      run: |
        cd dep/openssl/openssl
        ./Configure ${{ matrix.env.arch }} no-shared
        make
    - run: perl -V
    - name: Install Ninja
      uses: seanmiddleditch/gha-setup-ninja@v1
      with:
        version: 1.9.0
        platform: ${{ matrix.env.ninja_platform }}
        destination: ninja
    - name: Install Qt
      uses: jurplel/install-qt-action@v2.2.0
      with:
        version: 5.12.5
        target: desktop
        host: ${{ matrix.env.qtplatform }}
        install-deps: true
        modules: qtwebengine
    - name: Configure Release
      run: |
        mkdir -p build/release
        cd build/release
        cmake -G Ninja -DCMAKE_BUILD_TYPE=Release ../..
    - name: Build Information
      run: |
        echo "ninja version: $(ninja --version)"
        git --version
        qmake --version
        cmake --version
    - name: Build
      run: |
        cd build/release
        ninja
    - name: Test
      if: false
      run: |
        cd build/release
        ninja check